#include "rclcpp/rclcpp.hpp"
#include "geometry_msgs/msg/vector3.hpp"
#include <memory>
#include <iostream>

int main(int argc, char * argv[])
{
  rclcpp::init(argc, argv);
  auto node = std::make_shared<rclcpp::Node>("node_pub1_2");

  auto qos_profile = rclcpp::QoS(rclcpp::KeepLast(10));
  auto mypub = node->create_publisher<geometry_msgs::msg::Vector3>("topic_pub1_2", qos_profile);

  while (rclcpp::ok()) {
    double x, y, z;
    std::cout << "[pub1_2] 입력 (x y z) >> ";
    if (!(std::cin >> x >> y >> z)) {
      std::cin.clear();
      std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
      RCLCPP_INFO(node->get_logger(), "잘못된 입력. 다시 입력하세요.");
      continue;
    }

    geometry_msgs::msg::Vector3 msg;
    msg.x = x; msg.y = y; msg.z = z;

    RCLCPP_INFO(node->get_logger(), "Publish: (%.3f, %.3f, %.3f)", msg.x, msg.y, msg.z);
    mypub->publish(msg);
    // 예제 스타일 유지: spin_some 선택지(필수 아님)
    // rclcpp::spin_some(node);
  }

  rclcpp::shutdown();
  return 0;
}
